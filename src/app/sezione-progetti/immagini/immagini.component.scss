:host {
    --padding: calc(var(--gap) / 2);
    position: relative;
    width: calc(100% / 3 * 2);
    padding: var(--padding) var(--padding) calc(var(--padding) / 2) var(--padding);
    gap: calc(var(--gap) / 2);
    contain: paint;
    
    opacity: calc(var(--progresso-progetti) / 100);
    filter: blur(calc((1 - var(--progresso-progetti) / 100) * 1rem));
}

.wrapper-img {
    flex-grow: 1;
    position: relative;
    border-radius: .5rem;
    border: 2px solid color-mix(in srgb, var(--bianco-inverti) 30%, var(--nero-inverti) 70%);
    contain: paint;

    .icona{
        border: none;
        position: absolute;
        bottom: .5rem;
        right: .5rem;
        height: 2rem;
        width: 2rem;
        background-color: #FFF4;
        border-radius: .5rem;
        padding: .5rem;
        cursor: pointer;
        transition: opacity .5s var(--easing);

        @starting-style{
            opacity: 0;
        }
        
        ion-icon{
            color: var(--nero-h1);
            transition: scale .5s var(--easing);
        }

        &:hover ion-icon{
            scale: 1.1;
        }
    }

    img{
        position: absolute;
        object-fit: contain;
        height: 100%;
        width: 100%;
        z-index: 0;
    }

    &::before{
        --filtro: 5rem;
        content: '';
        position: absolute;
        inset: calc(var(--filtro) * -1);
        background-image: var(--img);
        background-size: cover;
        z-index: -1;
        opacity: .5;
        filter: blur(var(--filtro));
    }
}

dialog{
    overflow: visible;
    border: none;
    background-color: #0000;

    &, &::backdrop{
        transition: .33s var(--easing) allow-discrete;
        transition-property: opacity, filter, overlay, display;
    }

    .wrapper{
        place-items: center;
        overflow: clip;
        min-width: 100dvw;
        width: 100dvw;
        height: 100dvh;
        align-items: center;
        justify-content: center;
        padding: 2rem;
    }


    &::backdrop{
        background-color: #0005;
        backdrop-filter: blur(.25rem);
    }

    img{
        border-radius: .5rem;
        max-height: 80dvh;
        max-width: 80dvw;
    }

    button{
        position: fixed;
        right: 0;
        top: 2rem;
        padding: 1rem;
        border: none;
        background-color: #0000;
        
        &:not(:hover){
            color: #FFFA;
        }

        ion-icon{
            font-size: var(--testo-xxl);
        }
    }

    .info{
        color: #FFF;
        align-items: center;
        gap: .5rem;
        transform: translateY(1rem);
        font-size: var(--testo-m);

        ion-icon{
            font-size: var(--testo-l);
        }
    }

    &[open], &[open]::backdrop{
        display: flex;
        opacity: 1;
        filter: blur(0);
    
        @starting-style{
            opacity: 0;
            filter: blur(.5rem);
        }
    }

    &:not([open]), &:not([open])::backdrop{
        opacity: 0;
        filter: blur(.5rem);
        
        @starting-style{
            opacity: 1;
            filter: blur(0);
        }
    }
}

.wrapper-selettore {
    display: grid;
    place-items: center;

    .selettore {
        align-items: center;
        height: 4rem;
        position: relative;
        max-width: 100%;
        overflow-y: clip;
        overflow-x: scroll;
        margin-bottom: .5rem;

        img {
            aspect-ratio: 1;
            border-radius: .5rem;
            height: 75%;
            object-fit: cover;
            margin-inline: calc(var(--gap) / 4);
            border: 2px solid color-mix(in srgb, var(--bianco-inverti) 30%, var(--nero-inverti) 70%);
            transition: .5s var(--easing);
            transition-property: height, border-color;
            cursor: pointer;

            &:first-of-type {
                margin-left: 0;
            }

            &:last-of-type {
                margin-right: 0;
            }

            &.selezionata {
                height: 100%;
            }

            &.selezionata,
            &:hover {
                border-color: color-mix(in srgb, var(--bianco-inverti) 60%, var(--nero-inverti) 40%);
            }

            &.selezionata+img {
                height: 95%;

                &+img {
                    height: 90%;

                    &+img {
                        height: 85%;
                    }
                }
            }

            &:has(+ .selezionata) {
                height: 95%;
            }

            &:has(+ img + .selezionata) {
                height: 90%;
            }

            &:has(+ img + img + .selezionata) {
                height: 85%;
            }

        }

    }
}

.transizione{
    position: absolute;
    inset: var(--padding);
    gap: calc(var(--gap) / 4);
    pointer-events: none;

    .wrapper-img img, .wrapper-img::before{
        animation: abbassa-img .5s var(--easing) forwards;
        opacity: 1;

        @keyframes abbassa-img {
            to{
                opacity: 0;
            }
        }
    }

    .selettore img{
        animation: abbassa-img-selettore .3s var(--easing) forwards;
        animation-delay: calc(var(--delay) * 1s);
        transform: translateY(0);
        opacity: 1;

        @keyframes abbassa-img-selettore {
            to{
                transform: translateY(-3rem);
                opacity: 0;
            }
        }
    }
}

:host{
    & > .wrapper-img img, & > .wrapper-img::before{
        animation: alza-img .5s var(--easing) forwards;
        opacity: 0;
        
        @keyframes alza-img {
            to{
                opacity: 1;
            }
        }
    }

    & > .wrapper-selettore img{
        animation: alza-img-selettore .4s var(--easing) forwards;
        animation-delay: calc(var(--delay) * 1s);
        transform: translateY(3rem);
        opacity: 0;
        
        @keyframes alza-img-selettore {
            to{
                transform: translateY(0);
                opacity: 1;
            }
        }
    }
}

.cont-img {
    position: relative;
    cursor: zoom-in;

    ::ng-deep .lente{
        position: absolute;
        width: 20rem;
        aspect-ratio: 1;
        /* removed translate centering to avoid double-offset with JS transform */
        filter: blur(.5rem);
        transform: translate3d(0,0,0) scale(0);
        transform-origin: center;
        transition: .33s var(--easing);
        transition-property: filter, transform;
        will-change: transform, background-position;

        border: 2px solid color-mix(in srgb, var(--nero-inverti) 50%, var(--bianco-inverti) 50%);
        border-radius: 1rem;
        background-repeat: no-repeat;
        
        cursor: none;
        pointer-events: none;

        &.visibile{
            transform: translate3d(0,0,0) scale(1);
            filter: blur(0);
        }
    }

    &:has(.visibile){
        cursor: none;
    }
}

@media (pointer: coarse){
    .info{
        display: none;
    }
}